{"version":3,"sources":["Components/Header.jsx","Components/Textarea.jsx","Components/Main.jsx","Components/Footer.jsx","App.js","index.js"],"names":["Header","className","Textarea","props","defaultIcon","size","copiedIcon","useState","pText","setpText","clipIcon","setclipIcon","title","value","onChange","readOnly","onClick","copyToClipboard","setTimeout","Main","base","setBase","inputValue","setInputValue","outputValue","setOutputValue","baseTypes","binary","regExp","decimal","useEffect","input","numbers","split","filter","inputs","output","forEach","number","bigInt","trim","cvtbin2dec","toString","cvtdec2bin","e","userInput","target","test","navigator","clipboard","writeText","style","marginTop","oldBase","Footer","rel","href","color","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQASeA,G,MANA,kBACX,qBAAKC,UAAU,SAAf,SACI,+C,4BCyBOC,EA1BE,SAAAC,GACb,IAAMC,EAAc,cAAC,IAAD,CAAiBC,KAAK,SACpCC,EAAa,cAAC,IAAD,CAAaD,KAAK,SAFf,EAGIE,mBAAS,qBAHb,mBAGfC,EAHe,KAGRC,EAHQ,OAIUF,mBAASH,GAJnB,mBAIfM,EAJe,KAILC,EAJK,KAetB,OACI,sBAAKV,UAAU,MAAf,UACI,6BACKE,EAAMS,QAEX,0BAAUC,MAAOV,EAAMU,MAAOC,SAAUX,EAAMW,SAAUC,SAAUZ,EAAMY,WACxE,oBAAGC,QAhBa,WACpBP,EAAS,WACTE,EAAYL,GACZH,EAAMc,kBACNC,YAAW,WACPT,EAAS,qBACTE,EAAYP,KAEV,MAQF,UAA8BM,EAAS,+BAAOF,W,gBCgD3CW,EAjEF,WAAO,IAAD,EACSZ,mBAAS,UADlB,mBACRa,EADQ,KACFC,EADE,OAEqBd,mBAAS,IAF9B,mBAERe,EAFQ,KAEIC,EAFJ,OAGuBhB,mBAAS,IAHhC,mBAGRiB,EAHQ,KAGKC,EAHL,KAoBTC,EAAY,CACdC,OAAQ,CACJf,MAAO,cACPgB,OAAQ,aAEZC,QAAS,CACLjB,MAAO,eACPgB,OAAQ,cAIhBE,qBAAU,WAEFL,EADAH,EACwB,WAATF,EA7BJ,SAAAW,GACf,IAAMC,EAAUD,EAAME,MAAM,KAAKC,QAAO,SAAAC,GAAM,MAAe,KAAXA,KAC9CC,EAAS,GAIb,OAHAJ,EAAQK,SAAQ,SAAAC,GACZF,GAAM,UAAOG,IAAOD,EAAQ,GAAtB,QAEHF,EAAOI,OAuByBC,CAAWnB,GArBnC,SAAAS,GACf,IAAMC,EAAUD,EAAME,MAAM,KAAKC,QAAO,SAAAC,GAAM,MAAe,KAAXA,KAC9CC,EAAS,GAIb,OAHAJ,EAAQK,SAAQ,SAAAC,GACZF,GAAM,UAAOG,IAAOD,GAAQI,SAAS,GAA/B,QAEHN,EAAOI,OAekDG,CAAWrB,GAExD,MACpB,CAACA,EAAYF,IAahB,OACI,sBAAKnB,UAAU,YAAf,UACI,cAAC,EAAD,CAAUY,MAAOS,EAAYR,SAbpB,SAAA8B,GACb,IAAMC,EAAYD,EAAEE,OAAOjC,MACvBa,EAAUN,GAAMQ,OAAOmB,KAAKF,IAC5BtB,EAAcsB,IAUmCjC,MAAOc,EAAUN,GAAMR,MACpEK,gBAAiB,kBAAM+B,UAAUC,UAAUC,UAAU5B,MACzD,sBAAKrB,UAAU,WAAf,UACI,cAAC,IAAD,CAAsBI,KAAK,OAAO8C,MAAO,CAAEC,UAAW,OAClDpC,QAXG,SAAA4B,GACfrB,EAAcC,GACdH,GAAQ,SAAAgC,GAAO,MAAgB,WAAZA,EAAuB,UAAY,eAU9C,cAAC,IAAD,CAAkBhD,KAAK,YAE3B,cAAC,EAAD,CAAUQ,MAAOW,EAAaT,UAAU,EACpCE,gBAAiB,kBAAM+B,UAAUC,UAAUC,UAAU1B,IACrDZ,MAAgB,WAATQ,EAAoB,eAAiB,oBCxD7CkC,G,MARA,kBACX,qBAAKrD,UAAU,SAAf,SACI,oBAAG6C,OAAO,SAASS,IAAI,sBAAsBC,KAAK,4BAAlD,uBACc,cAAC,IAAD,CAAaC,MAAM,SADjC,OAC8C,cAAC,IAAD,CAAcA,MAAM,SADlE,iB,MCSOC,MAVf,WACE,OACE,sBAAKzD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLN0D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bd0bf03b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <h1>Bin 2 Dec</h1>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\nimport \"./Textarea.css\"\r\nimport { RiClipboardFill, RiCheckLine } from \"react-icons/ri\"\r\n\r\nconst Textarea = props => {\r\n    const defaultIcon = <RiClipboardFill size=\"19px\" />\r\n    const copiedIcon = <RiCheckLine size=\"19px\" />\r\n    const [pText, setpText] = useState(\"Copy to clipboard\")\r\n    const [clipIcon, setclipIcon] = useState(defaultIcon)\r\n    const copyToClipboard = () => {\r\n        setpText(\"Copied!\")\r\n        setclipIcon(copiedIcon)\r\n        props.copyToClipboard()\r\n        setTimeout(() => {\r\n            setpText(\"Copy to clipboard\")\r\n            setclipIcon(defaultIcon)\r\n        }\r\n            , 3000)\r\n    }\r\n    return (\r\n        <div className=\"put\">\r\n            <h2>\r\n                {props.title}\r\n            </h2>\r\n            <textarea value={props.value} onChange={props.onChange} readOnly={props.readOnly} />\r\n            <p onClick={copyToClipboard}>{clipIcon}<span>{pText}</span></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Textarea;","import React, { useState, useEffect } from \"react\";\r\nimport \"./Main.css\";\r\nimport Textarea from \"./Textarea\";\r\nimport { RiArrowLeftRightLine, RiArrowRightLine } from \"react-icons/ri\";\r\nimport bigInt from \"big-integer\";\r\n/* Since JavaScript max safe integer is 2^53 - 1, I used big-integer library to ensure that\r\n   it can convert numbers bigger than that */\r\n\r\nconst Main = () => {\r\n    const [base, setBase] = useState(\"binary\")\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const [outputValue, setOutputValue] = useState(\"\")\r\n    const cvtbin2dec = input => {\r\n        const numbers = input.split(\" \").filter(inputs => inputs !== \"\")\r\n        let output = \"\"\r\n        numbers.forEach(number => {\r\n            output += `${bigInt(number, 2)} `\r\n        })\r\n        return output.trim()\r\n    }\r\n    const cvtdec2bin = input => {\r\n        const numbers = input.split(\" \").filter(inputs => inputs !== \"\")\r\n        let output = \"\"\r\n        numbers.forEach(number => {\r\n            output += `${bigInt(number).toString(2)} `\r\n        })\r\n        return output.trim()\r\n    }\r\n    const baseTypes = {\r\n        binary: {\r\n            title: \"Binary Base\",\r\n            regExp: /^[0-1 ]*$/,\r\n        },\r\n        decimal: {\r\n            title: \"Decimal Base\",\r\n            regExp: /^[0-9 ]*$/\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (inputValue)\r\n            setOutputValue(base === \"binary\" ? cvtbin2dec(inputValue) : cvtdec2bin(inputValue))\r\n        else\r\n            setOutputValue(\"\")\r\n    }, [inputValue, base])\r\n\r\n    const onChange = e => {\r\n        const userInput = e.target.value\r\n        if (baseTypes[base].regExp.test(userInput))\r\n            setInputValue(userInput)\r\n    }\r\n\r\n    const changeBase = e => {\r\n        setInputValue(outputValue)\r\n        setBase(oldBase => oldBase === \"binary\" ? \"decimal\" : \"binary\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"converter\">\r\n            <Textarea value={inputValue} onChange={onChange} title={baseTypes[base].title}\r\n                copyToClipboard={() => navigator.clipboard.writeText(inputValue)} />\r\n            <div className=\"controls\">\r\n                <RiArrowLeftRightLine size=\"40px\" style={{ marginTop: \"2px\" }}\r\n                    onClick={changeBase} />\r\n                <RiArrowRightLine size=\"40px\" />\r\n            </div>\r\n            <Textarea value={outputValue} readOnly={true}\r\n                copyToClipboard={() => navigator.clipboard.writeText(outputValue)}\r\n                title={base === \"binary\" ? \"Decimal Base\" : \"Binary Base\"} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\nimport { RiHeartFill, RiGithubFill } from \"react-icons/ri\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => (\r\n    <div className=\"footer\">\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/hydenz\">\r\n            Made with <RiHeartFill color=\"#fff\" /> by <RiGithubFill color=\"#fff\"/> hydenz\r\n        </a>\r\n    </div>\r\n);\r\n\r\nexport default Footer;","import Header from \"./Components/Header\";\nimport Main from \"./Components/Main\";\nimport Footer from \"./Components/Footer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}