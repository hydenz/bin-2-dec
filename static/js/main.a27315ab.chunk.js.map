{"version":3,"sources":["Components/Header/Header.jsx","Hooks/useLocalStorage.js","Components/Main/TextHandler.jsx","Components/Main/Main.jsx","Components/Footer/Footer.jsx","Components/App/App.jsx","index.jsx","Components/Main/TextHandler.module.css","Components/Footer/Footer.module.css","Components/Main/Main.module.css","Components/Header/Header.module.css"],"names":["Header","className","styles","header","title","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","TextHandler","onChange","readOnly","defaultCopyBtnIcon","icon","copiedBtnIcon","clipboardBtnText","setClipboardBtnText","clipIcon","setClipIcon","formatText","text","split","filter","inputs","join","texthandler","onCopy","e","copiedText","slice","target","selectionStart","selectionEnd","formattedValue","navigator","clipboard","writeText","type","onClick","setTimeout","btn","btntxt","defaultProps","Main","inputValue","currentBase","localData","setLocalData","outputValue","setOutputValue","baseTypes","binary","regExp","cvtFn","number","bigInt","decimal","toString","useEffect","map","converter","userInput","test","replace","oldData","controls","Footer","footer","ghlink","rel","href","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a27315ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => (\r\n  <header className={styles.header}>\r\n    <h1 className={styles.title}>Bin 2 Dec</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","/* eslint no-console: \"off\" */\r\nimport { useState } from 'react';\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    try {\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { RiClipboardFill, RiCheckLine } from 'react-icons/ri';\r\nimport 'draft-js/dist/Draft.css';\r\nimport styles from './TextHandler.module.css';\r\n\r\nconst TextHandler = ({ title, value, onChange, readOnly }) => {\r\n  const defaultCopyBtnIcon = <RiClipboardFill className={styles.icon} />;\r\n  const copiedBtnIcon = <RiCheckLine className={styles.icon} />;\r\n  const [clipboardBtnText, setClipboardBtnText] = useState('Copy to clipboard');\r\n  const [clipIcon, setClipIcon] = useState(defaultCopyBtnIcon);\r\n\r\n  const formatText = (text) =>\r\n    text\r\n      .split('•')\r\n      .filter((inputs) => inputs !== '')\r\n      .join(' ');\r\n\r\n  const copyToClipboard = () => {\r\n    setClipboardBtnText('Copied!');\r\n    setClipIcon(copiedBtnIcon);\r\n    const formattedValue = formatText(value);\r\n    navigator.clipboard.writeText(formattedValue);\r\n    setTimeout(() => {\r\n      setClipboardBtnText('Copy to clipboard');\r\n      setClipIcon(defaultCopyBtnIcon);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleOnCopy = (e) => {\r\n    const copiedText = value.slice(\r\n      e.target.selectionStart,\r\n      e.target.selectionEnd\r\n    );\r\n    const formattedValue = formatText(copiedText);\r\n    navigator.clipboard.writeText(formattedValue);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.texthandler}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      <textarea\r\n        value={value}\r\n        className={styles.value}\r\n        onChange={onChange}\r\n        readOnly={readOnly}\r\n        onCopy={handleOnCopy}\r\n      />\r\n      <button type='button' onClick={copyToClipboard} className={styles.btn}>\r\n        {clipIcon}\r\n        <span className={styles.btntxt}>{clipboardBtnText}</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextHandler;\r\n\r\nTextHandler.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func,\r\n  readOnly: PropTypes.bool,\r\n};\r\n\r\nTextHandler.defaultProps = {\r\n  onChange: () => {},\r\n  readOnly: false,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { RiArrowLeftRightLine } from 'react-icons/ri';\r\nimport bigInt from 'big-integer';\r\nimport useLocalStorage from '../../Hooks/useLocalStorage';\r\nimport styles from './Main.module.css';\r\nimport TextHandler from './TextHandler';\r\n\r\n/* Since JavaScript max safe integer is 2^53 - 1, I used big-integer library to ensure that\r\n   it can convert numbers bigger than that */\r\n\r\nconst Main = () => {\r\n  const [localData, setLocalData] = useLocalStorage('bin-2-dec-data', {\r\n    inputValue: '',\r\n    currentBase: 'binary',\r\n  });\r\n  const [outputValue, setOutputValue] = useState('');\r\n\r\n  const baseTypes = {\r\n    binary: {\r\n      title: 'Binary Base',\r\n      regExp: /^[0-1\\s•]*$/,\r\n      cvtFn: (number) => bigInt(number, 2),\r\n    },\r\n    decimal: {\r\n      title: 'Decimal Base',\r\n      regExp: /^[0-9\\s•]*$/,\r\n      cvtFn: (number) => bigInt(number).toString(2),\r\n    },\r\n  };\r\n\r\n  // Using \"•\" character as separator instead of white spaces\r\n  const handleInputChange = (e) => {\r\n    let userInput = e.target.value;\r\n    if (baseTypes[localData.currentBase].regExp.test(userInput)) {\r\n      userInput = userInput\r\n        .replace(/^[\\s]+/, '')\r\n        .replace(/[\\s]+/g, '•')\r\n        .replace(/[•]+/g, '•');\r\n      setLocalData((oldData) => ({ ...oldData, inputValue: userInput }));\r\n    }\r\n  };\r\n\r\n  const handleBaseChange = () => {\r\n    setLocalData((oldData) => ({\r\n      inputValue: outputValue,\r\n      currentBase: oldData.currentBase === 'binary' ? 'decimal' : 'binary',\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const cvtInput = () => {\r\n      const numbers = localData.inputValue\r\n        .split('•')\r\n        .filter((inputs) => inputs !== '')\r\n        .map((value) => baseTypes[localData.currentBase].cvtFn(value));\r\n      const output = numbers.join('•');\r\n      return output;\r\n    };\r\n    if (localData.inputValue) setOutputValue(cvtInput());\r\n    else setOutputValue('');\r\n  }, [localData]);\r\n\r\n  return (\r\n    <main className={styles.converter}>\r\n      <TextHandler\r\n        onChange={handleInputChange}\r\n        value={localData.inputValue}\r\n        title={baseTypes[localData.currentBase].title}\r\n      />\r\n      <div className={styles.controls}>\r\n        <RiArrowLeftRightLine\r\n          className={styles.btn}\r\n          onClick={handleBaseChange}\r\n        />\r\n      </div>\r\n      <TextHandler\r\n        value={outputValue}\r\n        readOnly\r\n        title={\r\n          localData.currentBase === 'binary'\r\n            ? baseTypes.decimal.title\r\n            : baseTypes.binary.title\r\n        }\r\n      />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { RiHeartFill, RiGithubFill } from 'react-icons/ri';\r\nimport styles from './Footer.module.css';\r\n\r\nconst Footer = () => (\r\n  <footer className={styles.footer}>\r\n    <a\r\n      className={styles.ghlink}\r\n      target='_blank'\r\n      rel='noreferrer'\r\n      href='https://github.com/hydenz'\r\n    >\r\n      Made with <RiHeartFill className={styles.icon} /> by\r\n      <RiGithubFill className={styles.icon} />\r\n      hydenz\r\n    </a>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='app'>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"texthandler\":\"TextHandler_texthandler__3F_Cc\",\"title\":\"TextHandler_title__1jH9W\",\"value\":\"TextHandler_value__1HiHg\",\"btn\":\"TextHandler_btn__3erwx\",\"btntxt\":\"TextHandler_btntxt__RLcW4\",\"icon\":\"TextHandler_icon__2hT_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2BJAd\",\"ghlink\":\"Footer_ghlink___RMej\",\"icon\":\"Footer_icon__2Mses\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"converter\":\"Main_converter__3-9Oo\",\"btn\":\"Main_btn__2BRU6\",\"arrow\":\"Main_arrow__3-yJO\",\"controls\":\"Main_controls__2zgFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Qrst1\",\"title\":\"Header_title__q4aFR\"};"],"sourceRoot":""}